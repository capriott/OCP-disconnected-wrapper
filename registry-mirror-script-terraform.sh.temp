#!/bin/bash 

#==============================
echo "Creating root directory"
#==============================
# Creating some variables
#==============================

homedir=/home/ec2-user

hostname=$(hostname)

#=======================================
# Creating/Installing some dependencies
#=======================================

mkdir $homedir/registry-stuff && cd $homedir/registry-stuff
mkdir $homedir/mirroring-workspace
mkdir $homedir/cluster
mkdir $homedir/.aws

chown ec2-user:ec2-user $homedir/mirroring-workspace 
chown ec2-user:ec2-user $homedir/cluster

echo "Installing podman and wget"

sudo yum install wget -y -q
sudo yum install podman -y -q
sudo yum install jq -y -q
sudo yum install unzip -y -q
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
unzip awscliv2.zip
sudo ./aws/install

#============================================
# Setting up the agent container
#============================================

sudo podman run -d --network=host --name agent -v $homedir/cluster:/ocpd:Z quay.io/nstamate/agent:v2.0

#============================================
# Downloading and setting up mirror-registry
#============================================

echo "Getting mirror-registry package"

wget -q https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/mirror-registry/latest/mirror-registry.tar.gz

echo "Unpacking the tar file"

tar -xf mirror-registry.tar.gz

echo "Installing mirror-registry"

sudo ./mirror-registry install --quayHostname=$(hostname) --quayRoot=$homedir/registry-stuff > registry-install.log

echo "Get the password for the registry"

password=$(cat registry-install.log | grep -o 'credentials (init, [^)]*)' | sed "s/credentials (init, \([^)]*\))/\1/")

password_hash=$(echo -n "init:$${password}" | base64 -w0)

#======================================================================================
# Creating the global pull-secret for the ec2-user using the init password and hostname
#======================================================================================

echo "Create the pull-secret with the credentials and store it under ./docker/config.json"

mkdir $homedir/.docker

cat <<EOF > "$homedir/pull-secret.template"
$PULL_SECRET_CONTENT$
EOF

cp $homedir/pull-secret.template $homedir/.docker/config.json

sed -i "s/CREDENTIALS/$password_hash/g" $homedir/.docker/config.json
sed -i "s/REGISTRY-HOSTNAME/$hostname/g" $homedir/.docker/config.json

#=================================================================================
# Creating the filesystem required, Downloading oc-mirror and fixing the CA trust.
#=================================================================================

echo "Create oc-mirror and cluster workspace directory"

echo "Downloading oc-mirror"

wget -q https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/oc-mirror.tar.gz -P $homedir/mirroring-workspace/

tar -xf $homedir/mirroring-workspace/oc-mirror.tar.gz -C $homedir/mirroring-workspace/

chmod +x $homedir/mirroring-workspace/oc-mirror

mv ./oc-mirror /usr/local/bin

echo "Adding the rootCA to the host so registry to be trusted"

sudo cp $homedir/registry-stuff/quay-rootCA/rootCA.pem /etc/pki/ca-trust/source/anchors/

sudo update-ca-trust

#===============================================================================================
# Creating the .aws/Credentials file with the static credentials from the cluster deployer user
#===============================================================================================

mkdir $homedir/.aws

cat <<EOF > $homedir/.aws/credentials
[default]
aws_access_key_id = ${access_key_id}
aws_secret_access_key = ${access_key_secret}
EOF

chown -R ec2-user:ec2-user $homedir/.aws/