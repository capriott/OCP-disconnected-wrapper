#!/bin/bash 

echo "Creating root directory"

mkdir /home/ec2-user/registry-stuff && cd /home/ec2-user/registry-stuff

echo "Installing podman and wget"

sudo yum install wget -y -q
sudo yum install podman -y -q

echo "Getting mirror-registry package"

wget -q https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/mirror-registry/latest/mirror-registry.tar.gz

echo "Unpacking the tar file"

tar -xf mirror-registry.tar.gz

echo "Installing mirror-registry"

sudo ./mirror-registry install --quayHostname=$($REGISTRY_URL$) --quayRoot=/home/ec2-user/registry-stuff > registry-install.log

echo "Get the password for the registry"

password=$(cat registry-install.log | grep -o 'credentials (init, [^)]*)' | sed "s/credentials (init, \([^)]*\))/\1/")

password_hash=$(echo -n "init:${password}" | base64 -w0)

echo "Get the URL of the registry"

log_line="$(cat registry-install.log | grep 'Quay is available')"

registry_URL="${log_line#*https://}"
registry_URL="${registry_URL%% *}"

echo "Create the pull-secret with the credentials and store it under ./docker/config.json"

homedir=/home/ec2-user/

mkdir $homedir/.docker

cat <<EOF > "$homedir/pull-secret.template"
$PULL_SECRET_CONTENT$
EOF

cp /home/ec2-user/pull-secret.template $homedir/.docker/config.json

sed -i "s/CREDENTIALS/$password_hash/g" $homedir/.docker/config.json
sed -i "s/REGISTRY-HOSTNAME/$registry_URL/g" $homedir/.docker/config.json

echo "Create oc-mirror and cluster workspace directory"

mkdir $homedir/mirroring-workspace
mkdir $homedir/cluster

echo "Downloading oc-mirror"

wget -q https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/oc-mirror.tar.gz -P $homedir/mirroring-workspace/

tar -xf $homedir/mirroring-workspace/oc-mirror.tar.gz -C $homedir/mirroring-workspace/

chmod +x $homedir/mirroring-workspace/oc-mirror

echo "Adding the rootCA to the host so registry to be trusted"

sudo cp /home/ec2-user/registry-stuff/quay-rootCA/rootCA.pem /etc/pki/ca-trust/source/anchors/

sudo update-ca-trust

echo "Create the imageset-config.yaml and install-config.yaml template file"

cat <<EOF > "$homedir/mirroring-workspace/imageset-config.yaml"
apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  local:
    path: /home/ec2-user/oc-mirror-metadata
mirror:
  platform:
    channels:
      - name: stable-4.10
  operators:
    - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.10
      headsOnly: false
      packages:
        - name: rhacs-operator
          channels:
          - name: latest
          startingVersion: 3.67.0
EOF

cat <<EOF > "$homedir/cluster/install-config.yaml"
apiVersion: v1
baseDomain: emea.aws.cee.support
compute:
- architecture: amd64
  hyperthreading: Enabled
  name: worker
  platform: {}
  replicas: 3
controlPlane:
  architecture: amd64
  hyperthreading: Enabled
  name: master
  platform: {}
  replicas: 3
metadata:
  creationTimestamp: null
  name: nstamate-disconnected
networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  machineNetwork:
  - cidr: 10.0.0.32/27
  - cidr: 10.0.0.64/27
  - cidr: 10.0.0.96/27
  networkType: OVNKubernetes
  serviceNetwork:
  - 172.30.0.0/16
platform:
  aws:
    region: eu-west-1
    subnets:
    - ${private_subnet_1}
    - ${private_subnet_2}
    - ${private_subnet_3}
publish: Internal
pullSecret: 
sshKey: |

imageContentSources:
  - mirrors:
    - ip-10-0-0-7.eu-west-1.compute.internal:8443/openshift/release
    source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
  - mirrors:
    - ip-10-0-0-7.eu-west-1.compute.internal:8443/openshift/release-images
    source: quay.io/openshift-release-dev/ocp-release
additionalTrustBundle: |
EOF

echo "Fixing directory permissions"

chown -R ec2-user:ec2-user $homedir/mirroring-workspace/
chown -R ec2-user:ec2-user $homedir/cluster

echo "Cleanup the mirroring-workspace"

rm $homedir/mirroring-workspace/oc-mirror.tar.gz

echo "Registry is ready to mirror"

cat <<EOF > "$homedir/READY"
The registry was initialized successfully!
EOF

